# -------------------------CPA Options-------------------------
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.multigoal.MultiGoalCPA, cpa.automaton.ControlAutomatonCPA TerminatingFunctions, cpa.timeout.TimeoutCPA

TerminatingFunctions.cpa.automaton.inputFile = specification/test-comp-terminatingfunctions.spc

cpa.composite.aggregateBasicBlocks = false

cpa.value.refinement.restart           = ROOT
cpa.value.refinement.prefixPreference = DOMAIN_MIN,WIDTH_MIN,LENGTH_MIN

cpa.value.interpolation.applyItpEqualityOptimization = false
cpa.value.interpolation.applyRenamingOptimization    = false
cpa.value.interpolation.applyUnsatSuffixOptimization = false

# -------------------------Tiger Options-------------------------
# the file is in the standard config directory
tiger.algorithmConfigurationFile = tiger-internal-algorithm---value-refiner.properties

tiger.checkCoverage = true
tiger.allCoveredGoalsPerTestCase = false
tiger.printLabels = true
tiger.timeout = 180

# Use the Tiger Algorithm with Multigoal
analysis.algorithm.tiger = false
analysis.algorithm.tigerMultiGoal = true
tiger.goalReduction=NONE
tiger.useTestCompOutput = true
tiger.partitioning.partitionSize=25
tiger.partitioning.strategy=REVERSEDOMINATION

# -------------------------Traversal Options-------------------------
# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
# callstack is necessary for ABE with blocks across function boundaries to work well
[analysis.traversal]
order = bfs